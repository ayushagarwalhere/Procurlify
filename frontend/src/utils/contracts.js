// Contract address - Update this after deploying the contract
export const procurementAddress = "0x0000000000000000000000000000000000000000"; // TODO: Replace with deployed address

// Contract ABI - Generated from Procurement.sol
export const procurementAbi = [
  {
    inputs: [
      { internalType: "string", name: "_title", type: "string" },
      { internalType: "string", name: "_description", type: "string" },
      { internalType: "string", name: "_ipfsHash", type: "string" },
      { internalType: "uint256", name: "_deadline", type: "uint256" },
      { internalType: "uint256", name: "_minBudget", type: "uint256" },
      { internalType: "uint256", name: "_maxBudget", type: "uint256" },
    ],
    name: "createTender",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_tenderId", type: "uint256" },
      { internalType: "uint256", name: "_amount", type: "uint256" },
      { internalType: "string", name: "_proposalHash", type: "string" },
      { internalType: "string", name: "_technicalHash", type: "string" },
      { internalType: "string", name: "_financialHash", type: "string" },
    ],
    name: "submitBid",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_tenderId", type: "uint256" },
      { internalType: "uint256", name: "_bidId", type: "uint256" },
    ],
    name: "awardTender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_tenderId", type: "uint256" }],
    name: "closeTender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_tenderId", type: "uint256" }],
    name: "getTender",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "tenderId", type: "uint256" },
          { internalType: "address", name: "creator", type: "address" },
          { internalType: "string", name: "title", type: "string" },
          { internalType: "string", name: "description", type: "string" },
          { internalType: "string", name: "ipfsHash", type: "string" },
          { internalType: "uint256", name: "deadline", type: "uint256" },
          { internalType: "uint256", name: "minBudget", type: "uint256" },
          { internalType: "uint256", name: "maxBudget", type: "uint256" },
          { internalType: "uint8", name: "status", type: "uint8" },
          { internalType: "uint256", name: "createdAt", type: "uint256" },
          { internalType: "uint256", name: "totalBids", type: "uint256" },
          { internalType: "address", name: "awardedTo", type: "address" },
        ],
        internalType: "struct Procurement.Tender",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_bidId", type: "uint256" }],
    name: "getBid",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "bidId", type: "uint256" },
          { internalType: "uint256", name: "tenderId", type: "uint256" },
          { internalType: "address", name: "bidder", type: "address" },
          { internalType: "uint256", name: "amount", type: "uint256" },
          { internalType: "string", name: "proposalHash", type: "string" },
          { internalType: "string", name: "technicalHash", type: "string" },
          { internalType: "string", name: "financialHash", type: "string" },
          { internalType: "uint8", name: "status", type: "uint8" },
          { internalType: "uint256", name: "submittedAt", type: "uint256" },
          { internalType: "string", name: "bidHash", type: "string" },
        ],
        internalType: "struct Procurement.Bid",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_tenderId", type: "uint256" }],
    name: "getTenderBids",
    outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_user", type: "address" }],
    name: "getUserTenders",
    outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_user", type: "address" }],
    name: "getUserBids",
    outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tenderCount",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bidCount",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "uint256", name: "tenderId", type: "uint256" },
      { indexed: true, internalType: "address", name: "creator", type: "address" },
      { indexed: false, internalType: "string", name: "title", type: "string" },
      { indexed: false, internalType: "string", name: "ipfsHash", type: "string" },
      { indexed: false, internalType: "uint256", name: "deadline", type: "uint256" },
    ],
    name: "TenderCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "uint256", name: "bidId", type: "uint256" },
      { indexed: true, internalType: "uint256", name: "tenderId", type: "uint256" },
      { indexed: true, internalType: "address", name: "bidder", type: "address" },
      { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
      { indexed: false, internalType: "string", name: "bidHash", type: "string" },
    ],
    name: "BidSubmitted",
    type: "event",
  },
];

